

################################################
# ┏┓╻┏━┓╺┳╸┏━╸┏━┓
# ┃┗┫┃ ┃ ┃ ┣╸ ┗━┓
# ╹ ╹┗━┛ ╹ ┗━╸┗━┛
# NOTES
################################################

# CHECK AT LEAST DEPENDENCIES PART!
########################
# DEPENDENCIES:
#  * xdotool (a few key bindings require it)
#  * python3 (custom i3status)
#  * any notification daemon (basically, check that notify-send command properly shows desktop notifications)
#  * amixer  (volume keys support)
#  * acpilight + xbacklight (screen brightness keys support)
#     - As per https://wiki.archlinux.org/title/backlight , you need to set up
#       udev rule for backlight so that the user is permitted to control it:
#       /etc/udev/rules.d/backlight.rules
#       
#           ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chgrp video $sys$devpath/brightness", RUN+="/bin/chmod g+w $sys$devpath/brightness"
#       
#       Then run   udevadm control --reload-rules   (or reboot)
#       
#     - You will also need to check if eDP-1 is a name of your main X11 output for
#       brightness control (you can check it by running   xrandr -q  )
#       If it is not, change all occurrences of "eDP-1" in this config file.
#  * playerctl (media control keys (play/pause/next/prev) support)
#  * scrot, xclip and tesseract (used in key bindings for taking screenshots)
#  * rofi (used in the key binding to search for specific window)
#
#  * See also "AUTO STARTUP APPLICATION" section for the list of apps that I use with i3

# This is basic config file for the i3 window manager
# I have taken parts from these configuration examples:
#  * https://www.reddit.com/r/i3wm/comments/3tdpkf/how_i_do_i3_a_how_to_of_sorts_my_config_included/
#  * https://gitlab.jaytaala.com/j.taala/jt-config-repo/-/blob/master/i3/config


########################
# GNOME TERMINAL UI FIX
#
# For gnome-terminal, title bar in i3 is huge, it can be hidden 
# using this command:
#
#     gsettings set org.gnome.Terminal.Legacy.Settings headerbar "@mb false"
#
# Source: https://askubuntu.com/a/1399587

########################
# WINDOW COMPOSITORS
#
# In this configuration, I am *not* using window compositor.
# Because of that, screensharing with Zoom might be slow and/or buggy.
# I think there are also some bugs with Telegram.
# So you might want to install one of 2 window compositors.
#
# 1. Very lightweight: xcompmgr (I am using this one sometimes)
#     Startup command with reasonable defaults:
#
#           xcompmgr -c -l0 -t0 -r0 -o.00
#
# 2. More features: picom
#     I do not know reasonable defaults here, commonly it is advised to 
#     reduce fade timeout and keep other settings unchanged.

########################
# STATUS BAR
# I am using lightweight i3status, alternatives with more features are i3block and polybar
# 
# Alternatively, there is a lightweight Rust-based widget system that can be used:
# https://github.com/elkowar/eww

########################
# TOUCHPAD
# See this if you need to enable tap to click in i3+X11:
# https://cravencode.com/post/essentials/enable-tap-to-click-in-i3wm/

########################
# POSSIBLE IMPROVEMENTS
# TODO: Since i3 version 4.20, there is an 'include' directive, so it is 
# not necessary to keep all configuration in a single file.
# (https://i3wm.org/docs/userguide.html#include)

################################################
# ╺┳┓┏━╸┏━╸┏━┓╻ ╻╻ ╺┳╸ ╻ ╻┏━╸╻  ┏━┓ ┏┳┓┏━╸┏━┓┏━┓┏━┓┏━╸┏━╸
#  ┃┃┣╸ ┣╸ ┣━┫┃ ┃┃  ┃  ┣━┫┣╸ ┃  ┣━┛ ┃┃┃┣╸ ┗━┓┗━┓┣━┫┃╺┓┣╸ 
# ╺┻┛┗━╸╹  ╹ ╹┗━┛┗━╸╹  ╹ ╹┗━╸┗━╸╹   ╹ ╹┗━╸┗━┛┗━┛╹ ╹┗━┛┗━╸
# DEFAULT HELP MESSAGE
################################################

# i3 config file (v4)
#
# This file has been auto-generated by i3-config-wizard(1).
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

################################################
# ╻┏┓╻┏━┓╻ ╻╺┳╸ ┏━┓╺┳┓ ┏┓╻ ╻┏━┓╺┳╸┏┳┓┏━╸┏┓╻╺┳╸┏━┓
# ┃┃┗┫┣━┛┃ ┃ ┃  ┣━┫ ┃┃  ┃┃ ┃┗━┓ ┃ ┃┃┃┣╸ ┃┗┫ ┃ ┗━┓
# ╹╹ ╹╹  ┗━┛ ╹  ╹ ╹╺┻┛┗━┛┗━┛┗━┛ ╹ ╹ ╹┗━╸╹ ╹ ╹ ┗━┛
# INPUT ADJUSTMENTS
################################################

########################
# Switch keyboard between en-US and ru-RU layouts (https://superuser.com/a/1242534)

### Alt+Shift layout toggle
exec_always "setxkbmap -model pc104 -layout us,ru -variant ,, -option -option 'grp:alt_shift_toggle'"
### Alt+Shift or Ctrl+Shift layout toggle
# exec_always "setxkbmap -model pc104 -layout us,ru -variant ,, -option -option 'grp:ctrl_shift_toggle,alt_shift_toggle'"
### Alt+Shift or Caps Lock layout toggle
# exec_always "setxkbmap -model pc104 -layout us,ru -variant ,, -option grp:alt_shift_toggle -option ctrl:swapcaps"

########################
# Increase touchpad speed
exec_always "xinput --set-prop 'pointer:SynPS/2 Synaptics TouchPad' 'libinput Accel Speed' 0.4"

################################################
# ╺┳╸╻ ╻┏━╸┏┳┓┏━╸ ┏━╸┏━┓╻  ┏━┓┏━┓┏━┓
#  ┃ ┣━┫┣╸ ┃┃┃┣╸  ┃  ┃ ┃┃  ┃ ┃┣┳┛┗━┓
#  ╹ ╹ ╹┗━╸╹ ╹┗━╸ ┗━╸┗━┛┗━╸┗━┛╹┗╸┗━┛
# THEME COLORS
################################################

# set variable for main accent color
set $acolor #eb564d
# set other colors
set $bdrcolor #4d4949
set $bgicolor #eb564d
set $bgucolor #6a6868
set $txtacolor #F9FAF9
set $txtucolor #bdbbbb
set $indcolor #00ff00

client.focused          $bdrcolor #285577 $txtacolor $indcolor $acolor

# # class                   border  backgr. text    indic.   child_border
# client.focused          $bdrcolor $acolor $txtacolor $indcolor $acolor
# client.focused_inactive $bdrcolor $bgicolor $txtacolor $indcolor $bgucolor
# client.unfocused        $bdrcolor $bgucolor $txtucolor $indcolor $bgucolor
# client.urgent           #CB4B16 #FDF6E3 #CB4B16 $indcolor
# client.placeholder      #000000 #0c0c0c $txtacolor #000000
# client.background       #2B2C2B

################################################
# ┏━╸┏━┓┏┳┓┏┳┓┏━┓┏┓╻ ┏━┓┏━╸╺┳╸╺┳╸╻┏┓╻┏━╸┏━┓
# ┃  ┃ ┃┃┃┃┃┃┃┃ ┃┃┗┫ ┗━┓┣╸  ┃  ┃ ┃┃┗┫┃╺┓┗━┓
# ┗━╸┗━┛╹ ╹╹ ╹┗━┛╹ ╹ ┗━┛┗━╸ ╹  ╹ ╹╹ ╹┗━┛┗━┛
# COMMON SETTINGS
################################################

###
# Win as main modifier key
###
set $mod Mod4
###
# Alt as main modifier key
###
# set $mod Mod1

# Switch focus to activated window, even if it's in a different workspace
focus_on_window_activation focus

# If we move to the right edge and try to move right, the focus will
# not move to the leftmost window
focus_wrapping no

########################
# FONT
########################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

################################################
# ┏┓ ┏━┓╺┳╸╺┳╸┏━╸┏━┓╻ ╻ ┏┓╻┏━┓╺┳╸╻┏━╸╻┏━╸┏━┓╺┳╸╻┏━┓┏┓╻
# ┣┻┓┣━┫ ┃  ┃ ┣╸ ┣┳┛┗┳┛ ┃┗┫┃ ┃ ┃ ┃┣╸ ┃┃  ┣━┫ ┃ ┃┃ ┃┃┗┫
# ┗━┛╹ ╹ ╹  ╹ ┗━╸╹┗╸ ╹  ╹ ╹┗━┛ ╹ ╹╹  ╹┗━╸╹ ╹ ╹ ╹┗━┛╹ ╹
# BATTERY NOTIFICATION
################################################

###
# From: https://github.com/rjekker/i3-battery-popup/blob/8007b2b9/i3-battery-popup
# Basically, use these commands to install:
#
#     mkdir -p ~/.local/bin
#     wget -q https://raw.githubusercontent.com/rjekker/i3-battery-popup/8007b2b9/i3-battery-popup -P ~/.local/bin
#     chmod a+x ~/.local/bin/i3-battery-popup
#
# Then, uncomment the following 2 lines:

# for_window [title="Battery Warning"] sticky enable
# exec --no-startup-id i3-battery-popup -L 38 # Start warning at 38%

###
# I think I stopped using it because the warning window did not break me out of
# fullscreen mode, so it was easy to miss the fact that battery charge was
# becoming too low (TODO: check if it actually was the case or not)

################################################
# ┏┓ ┏━┓┏━┓╺┳┓┏━╸┏━┓┏━┓
# ┣┻┓┃ ┃┣┳┛ ┃┃┣╸ ┣┳┛┗━┓
# ┗━┛┗━┛╹┗╸╺┻┛┗━╸╹┗╸┗━┛
# BORDERS
################################################

# Window border multiplier
set $borders 4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel $borders
new_float pixel $borders

# Hide borders
hide_edge_borders none

# Change borders hotkeys
bindsym $mod+u border none
bindsym $mod+y border pixel 4
bindsym $mod+n border normal

################################################
# ┏━┓╺┳╸┏━┓╺┳╸╻ ╻┏━┓┏┓ ┏━┓┏━┓
# ┗━┓ ┃ ┣━┫ ┃ ┃ ┃┗━┓┣┻┓┣━┫┣┳┛
# ┗━┛ ╹ ╹ ╹ ╹ ┗━┛┗━┛┗━┛╹ ╹╹┗╸
# STATUSBAR
################################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
# Uses ~/.config/i3status/config
bar {
        # status_command i3status
        
        # The script to show current kb layout, volume, and CPU mode (performance/powersave)
        status_command $HOME/Dropbox/Scripts/i3status_modified.py
}

# NOTE: You can force an update of i3status using this command:
# killall -USR1 i3status

################################################
# ┏━┓┏━┓┏━┓╻  ╻┏━╸┏━┓╺┳╸╻┏━┓┏┓╻ ┏━┓┏━╸╺┳╸╺┳╸╻┏┓╻┏━╸┏━┓
# ┣━┫┣━┛┣━┛┃  ┃┃  ┣━┫ ┃ ┃┃ ┃┃┗┫ ┗━┓┣╸  ┃  ┃ ┃┃┗┫┃╺┓┗━┓
# ╹ ╹╹  ╹  ┗━╸╹┗━╸╹ ╹ ╹ ╹┗━┛╹ ╹ ┗━┛┗━╸ ╹  ╹ ╹╹ ╹┗━┛┗━┛
# APPLICATION SETTINGS
################################################

for_window [class="gnuplot*"] floating enable
for_window [class="ROOT"] floating enable

################################################
# ┏━┓┏━┓┏━┓╻  ╻┏━╸┏━┓╺┳╸╻┏━┓┏┓╻┏━┓ ┏━┓╻ ╻┏━┓┏━┓╺┳╸┏━╸╻ ╻╺┳╸┏━┓
# ┣━┫┣━┛┣━┛┃  ┃┃  ┣━┫ ┃ ┃┃ ┃┃┗┫┗━┓ ┗━┓┣━┫┃ ┃┣┳┛ ┃ ┃  ┃ ┃ ┃ ┗━┓
# ╹ ╹╹  ╹  ┗━╸╹┗━╸╹ ╹ ╹ ╹┗━┛╹ ╹┗━┛ ┗━┛╹ ╹┗━┛╹┗╸ ╹ ┗━╸┗━┛ ╹ ┗━┛
# APPLICATIONS SHORTCUTS
################################################

bindsym $mod+shift+w exec firefox
# When firefox is already started, open a new firefox private window
bindsym $mod+shift+p exec "                                 \
  xdotool keyup super+shift+p;                              \
  xdotool search --name 'Mozilla Firefox' key ctrl+shift+p; \
  xdotool keydown super+shift;                              \
"

bindsym $mod+shift+e exec thunar

# start a terminal
bindsym $mod+Return exec gnome-terminal
# bindsym $mod+Return exec mate-terminal
# bindsym $mod+Return exec i3-sensible-terminal

################################################
# ╻┏ ┏━╸╻ ╻ ┏┓ ╻┏┓╻╺┳┓╻┏┓╻┏━╸┏━┓
# ┣┻┓┣╸ ┗┳┛ ┣┻┓┃┃┗┫ ┃┃┃┃┗┫┃╺┓┗━┓
# ╹ ╹┗━╸ ╹  ┗━┛╹╹ ╹╺┻┛╹╹ ╹┗━┛┗━┛
# KEY BINDINGS
################################################

#-----------------------
# ┌╴╷╷╭╴┬╭╮╲╱ ├┐┬╭╮┌┤┬╭╮╭_╭╴
# └╴└┘╶╯╵╰╯▏▕ └┘┴╵╵└┘┴╵╵╰┘╶╯
# CUSTOM BINDINGS
#-----------------------

#----------
# WINDOW MANAGEMENT
#----------

###
# Source: https://gitlab.jaytaala.com/j.taala/jt-config-repo/-/blob/7b839b8eb90f3ba47c538630b108651850bdf289/i3/config#L135-137
###
# After pressing this hotkey, current and next windows will be combined into a
# horizontal split
bindsym $mod+x split h, layout splith, focus right, move left, focus left
# Same but for *previous and current* windows
bindsym $mod+Shift+x split h, layout splith, focus left, move right, focus right
###

# focus the parent container
bindsym $mod+a focus parent
# focus the child container
bindsym $mod+z focus child

#-----------
# Move entire workspaces across monitors
#-----------

bindsym ctrl+$mod+Shift+h move workspace to output left
bindsym ctrl+$mod+Shift+j move workspace to output down
bindsym ctrl+$mod+Shift+k move workspace to output up
bindsym ctrl+$mod+Shift+l move workspace to output right

#-----------
# SRATCHPAD
#-----------

# Move a window to a special hidden workspace.
bindsym $mod+Shift+minus move scratchpad
# You can pull it back using this command
bindsym $mod+minus scratchpad show 

#-----------
# CONTAINER RENAMING
#-----------

# manual renaming of parent container
bindsym $mod+slash exec "answer=$(zenity --title=\\"i3-msg title_format\\" --text \\"Change %TITLE for parent container\\" --entry); if [ -n \\"$answer\\" ]; then i3-msg focus parent, title_format \\"<span foreground='pink'><b> $answer</b></span>\\", focus child; else i3-msg focus parent, title_format \\"<span foreground='pink'><b> %title</b></span>\\", focus child; fi"
# ) this parentheses is needed here, otherwise syntax highlighting breaks in vim


#-----------
# PASTING HIGHLIGHTED TEXT
#-----------

bindsym Ctrl+Mod4+v exec $HOME/.scripts/paste_highlighted

#-----------
# SEARCH FOR SPECIFIC WINDOW
#-----------

### Basic option

# bindsym $mod+i exec rofi -matching fuzzy -show-icons -show window

### Advanced option, can also search for specific terminal tabs and browser tabs

# Uses https://github.com/FrostUser/my_bash_scripts/blob/master/select_window_or_tab.sh
bindsym $mod+i exec rofi -matching normal -show-icons -show tabs\
                         -modes "tabs:$HOME/.scripts/select_window_or_tab.sh"

#-----------
# GO TO LEFT/RIGHT MONITOR
#-----------

bindsym Ctrl+Mod1+Mod4+1 exec xdotool mousemove 960 540
bindsym Ctrl+Mod1+Mod4+2 exec xdotool mousemove 2880 540

#-----------
# SCREENSHOTS
#-----------

### Select screen area, take screenshot, copy image to clipboard
bindsym --release Ctrl+Mod1+s exec --no-startup-id scrot -f -o -s "$HOME/tmpscreenshot.png" && xclip -selection c -t image/png ~/tmpscreenshot.png

### Select screen area, take screenshot, OCR the text, copy text to clipboard
# Requires tesseract (needs `pip install tesserwrap` and system package for tesseract OCR files)
bindsym --release Ctrl+Mod4+s exec --no-startup-id scrot -o -s "$HOME/tmpscreenshot.png" && LC_ALL=C $HOME/.scripts/ocr $HOME/tmpscreenshot.png | xclip -i -selection c

### Select screen area, take screenshot, convert img to braille dots, copy text to clipboard
bindsym --release Ctrl+Mod1+Mod4+s exec --no-startup-id scrot -f -o -s "$HOME/tmpscreenshot.png" && $HOME/.scripts/braille $HOME/tmpscreenshot.png | xclip -i -selection c

# Alternative to the command above
# bindsym --release Ctrl+Mod1+Mod4+s exec --no-startup-id scrot -o -s $HOME/tmpscreenshot.png && $HOME/.scripts/Image-To-Braille/braille.py --nocolor -s 2 $HOME/tmpscreenshot.png | xclip -i -selection c

### Select screen area, take screenshot, resize to 0.25 of the orig size, copy image to clipboard
bindsym Ctrl+Mod4+q exec xclip -selection clipboard -t image/png -o > "$HOME/tmpscreenshot.png" && exec mogrify -resize 25% $HOME/tmpscreenshot.png

#------------
# MEDIA KEYS
#------------

### Touchpad enable/disable (TODO: need to implement the actual script)

bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

### Media player controls

bindsym XF86AudioPlay  exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext  exec playerctl next
bindsym XF86AudioPrev  exec playerctl previous

### VOLUME CONTROL

# The basic way to control volume can be done with these 3 commands:
# 
#     bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%  # increase sound volume
#     bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%  # decrease sound volume
#     bindsym XF86AudioMute        exec --no-startup-id pactl set-sink-mute 0 toggle # mute/unmute
# 
# But they won't display a notification about volume change, also for me amixer
# worked better (I think pactl sometimes selected incorrect default sink)

# Volume controls (uses variables defined below)
bindsym XF86AudioRaiseVolume exec $volume_increase; exec $volume_notify
bindsym XF86AudioLowerVolume exec $volume_decrease; exec $volume_notify
bindsym XF86AudioMute exec --no-startup-id amixer set 'Master' toggle


set $volume_increase "                                                         \
    amixer set 'Master' 5%+; `# increase sound volume`                         \
    killall -USR1 i3status;  `# update i3status`                               \
  " 

set $volume_decrease "                                                         \
    amixer set 'Master' 5%-; `# decrease sound volume`                         \
    killall -USR1 i3status;  `# update i3status`                               \
  " 

# Script to show current volume in notify-send
set $volume_notify "                                                           \
    sleep 0.05; `# make sure that volume_increase process is called first`     \
    `# If not defined, prepare replacable notification ID`;                    \
    if ! (( `cat \\"/tmp/.volume_notify.$UID\\"` > 0 )) 2>/dev/null; then       \
        notify-send --print-id \\"Volume:\\" > \\"/tmp/.volume_notify.$UID\\"; \
    fi;                                                                        \
    `# Show notification`;                                                     \
    notify-send -e \\"Volume: `amixer get Master | grep -m1 -oE [0-9]+%`\\"    \
        --replace-id `cat \\"/tmp/.volume_notify.$UID\\"`;                     \
  "

### SCREEN BRIGHTNESS CONTROLS

# I am using acpilight package (it is controlled by xbacklight command for compatibility reasons)

# IMPORTANT NOTE: See DEPENDENCIES section above, subsection on acpilight
# /etc/udev/rules.d/backlight.rules
# ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chgrp video $sys$devpath/brightness", RUN+="/bin/chmod g+w $sys$devpath/brightness"
###

# increase screen brightness
bindsym XF86MonBrightnessUp   exec "                             \
  if ((`xbacklight -get` < 100)); then                           \
    xbacklight -inc 10;                                          \
  else                                                           \
    `# Set brightness above 100%`                                \
    xrandr --output eDP-1  --gamma 2;                            \
  fi;                                                            \
  "; exec $brightness_notify

# decrease screen brightness
bindsym XF86MonBrightnessDown exec "                             \
  if ((`xbacklight -get` == 100)); then                          \
    `# Turn off additional brightness increase`                  \
    xrandr --output eDP-1 --gamma 1;                             \
  fi;                                                            \
  xbacklight -dec 10;                                            \
  "; exec $brightness_notify

set $brightness_notify "                                                       \
    sleep 0.05; `# make sure that brightness_increase process is called first` \
    `# If not defined, prepare replacable notification ID`;                    \
    if ! (( `cat \\"/tmp/.brightness_notify.$UID\\"` > 0 )) 2>/dev/null; then  \
        notify-send --print-id \\"Brightness:\\"                               \
          > \\"/tmp/.brightness_notify.$UID\\";                                \
    fi;                                                                        \
    notify-send -e \\"Brightness: `xbacklight -get`\\"                         \
        --replace-id `cat \\"/tmp/.brightness_notify.$UID\\"`;                 \
  "

#-----------------------
# ├┐┌┐╭╴┬┌╴ ├┐┬╭╮┌┤┬╭╮╭_╭╴
# └┘├┤╶╯┴└╴ └┘┴╵╵└┘┴╵╵╰┘╶╯
# BASIC BINDINGS
#-----------------------

# Use $mod+mouse_drag to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the arrow keys:
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym Mod1+F10 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#------------
# configuration file controls
#------------

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


################################################
# ┏━┓╻ ╻╺┳╸┏━┓ ┏━┓╺┳╸┏━┓┏━┓╺┳╸╻ ╻┏━┓ ┏━┓┏━┓┏━┓╻  ╻┏━╸┏━┓╺┳╸╻┏━┓┏┓╻┏━┓
# ┣━┫┃ ┃ ┃ ┃ ┃ ┗━┓ ┃ ┣━┫┣┳┛ ┃ ┃ ┃┣━┛ ┣━┫┣━┛┣━┛┃  ┃┃  ┣━┫ ┃ ┃┃ ┃┃┗┫┗━┓
# ╹ ╹┗━┛ ╹ ┗━┛ ┗━┛ ╹ ╹ ╹╹┗╸ ╹ ┗━┛╹   ╹ ╹╹  ╹  ┗━╸╹┗━╸╹ ╹ ╹ ╹┗━┛╹ ╹┗━┛
# AUTO STARTUP APPLICATIONS
################################################

# Turn on bluetooth
exec --no-startup-id bluetoothctl power on

### Script to set up desktop background with feh (feh is a lightweight img viewer)
# Something like
# 
#     feh --no-fehbg --bg-fill '/mnt/D/Dwnloads/NSU/00_Personal/AandK/Images/alexander-skold-alexander-skold-slum-apartments.jpg' 
# 
exec --no-startup-id $HOME/.fehbg </dev/null >/dev/null 2>&1

# Alt+tab support on i3 (https://github.com/sagb/alttab)
exec --no-startup-id alttab -fg "#d58681" -bg "#4a4a4a" -frame "#eb564d" -t 128x150 -i 127x64

# Cloud storage
exec --no-startup-id dropbox start

# Mouse gestures
exec --no-startup-id easystroke

### https://github.com/morrolinux/i3expo-ng : show all workspaces at once
# bindsym $mod+q exec killall -s SIGUSR1 i3expod.py
# exec --no-startup-id $HOME/.local/i3expo/i3expod.py </dev/null >/dev/null 2>&1
# I think i3expod crashed fairly frequently, so I stopped using it

################################################
# ╺┳╸┏━╸┏┳┓┏━┓┏━┓┏━┓┏━┓┏━┓╻ ╻ ┏┓ ╻┏┓╻╺┳┓╻┏┓╻┏━╸┏━┓
#  ┃ ┣╸ ┃┃┃┣━┛┃ ┃┣┳┛┣━┫┣┳┛┗┳┛ ┣┻┓┃┃┗┫ ┃┃┃┃┗┫┃╺┓┗━┓
#  ╹ ┗━╸╹ ╹╹  ┗━┛╹┗╸╹ ╹╹┗╸ ╹  ┗━┛╹╹ ╹╺┻┛╹╹ ╹┗━┛┗━┛
# Temporary bindings
# 
# (probably not interesting for other users)
################################################

# Clip object in Inkscape (select object to be clipped, add clip mask to selection and then press this binding)
bindsym Ctrl+Mod1+e exec xdotool keyup Alt keyup Ctrl keyup e key Menu key Up key Up key Up key Up key Up key Return key Escape

# Open savefile dialog and press Home in firefox
# bindsym Ctrl+Mod1+f exec xdotool keyup Alt keyup Ctrl keyup f key Ctrl+s sleep 0.5 key Home key underscore key Left
# bindsym Ctrl+Mod1+f exec xdotool keyup Alt keyup Ctrl keyup f click 3 key Down key Down key Enter sleep 0.5
# bindsym Ctrl+Mod1+f exec xdotool keyup Alt keyup Ctrl click 1

# Alternative volume controls
bindsym Scroll_Lock          exec $volume_decrease; exec $volume_notify
bindsym Print                exec $volume_decrease; exec $volume_notify
bindsym Pause                exec $volume_increase; exec $volume_notify


# Inlcude specific local configuration (include directive supported since i3 v4.20)
include local.conf

################################################
# ┏━╸┏━┓┏━┓┏━┓
# ┃╺┓┣━┫┣━┛┗━┓
# ┗━┛╹ ╹╹  ┗━┛
# GAPS
################################################

# I once had an idea to use negative value of gaps to make windows slightly
# overlap (because there is usually no meaningful information at window left
# and right borders, at least at first 20px)

# NOTE: Negative gaps do not work the way I want,
# they *can* be set to negatives and render properly
# but Z-order is wrong, the focused window is not
# always in the foreground

# gaps inner -40
# gaps outer 40
# gaps horizontal 40

